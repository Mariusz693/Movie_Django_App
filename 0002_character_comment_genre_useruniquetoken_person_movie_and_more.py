# Generated by Django 4.0.3 on 2022-09-18 15:42

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_countries.fields
import django_resized.forms
import movie_app.models
import movie_app.validators
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('movie_app', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Character',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(max_length=128, verbose_name='Postac')),
            ],
            options={
                'verbose_name': 'Postać w filmie',
                'verbose_name_plural': 'Postacie w filmach',
                'ordering': ['movie'],
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(verbose_name='Komentarz')),
            ],
            options={
                'verbose_name': 'Komentarz',
                'verbose_name_plural': 'Komentarze',
                'ordering': ['movie'],
            },
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(error_messages={'unique': 'Nazwa gatunku już zapisana w serwisie'}, max_length=32, unique=True, verbose_name='Nazwa')),
            ],
            options={
                'verbose_name': 'Gatunek',
                'verbose_name_plural': 'Gatunki',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='UserUniqueToken',
            fields=[
                ('token', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=32, verbose_name='Imię')),
                ('last_name', models.CharField(max_length=32, verbose_name='Nazwisko')),
                ('date_of_birth', models.DateField(verbose_name='Data urodzenia')),
                ('date_of_death', models.DateField(blank=True, null=True, verbose_name='Data śmierci')),
                ('biography', models.TextField(blank=True, verbose_name='Biografia')),
                ('country', django_countries.fields.CountryField(max_length=2, verbose_name='Kraj pochodzenia')),
                ('avatar', django_resized.forms.ResizedImageField(crop=['middle', 'center'], default='movie_app/default_person.png', force_format='PNG', keep_meta=True, quality=75, scale=None, size=[192, 256], upload_to=movie_app.models.image_upload_handler, verbose_name='Awatar')),
                ('liked_by', models.ManyToManyField(blank=True, related_name='liked_persons', to=settings.AUTH_USER_MODEL, verbose_name='Polubienia')),
            ],
            options={
                'verbose_name': 'Postać',
                'verbose_name_plural': 'Postacie',
                'ordering': ['first_name', 'last_name'],
                'unique_together': {('first_name', 'last_name')},
            },
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128, verbose_name='Tytuł')),
                ('duration', models.DurationField(verbose_name='Czas trwania')),
                ('plot', models.TextField(blank=True, verbose_name='Fabuła')),
                ('year', models.PositiveSmallIntegerField(validators=[movie_app.validators.validate_year], verbose_name='Rok produkcji')),
                ('rating', models.DecimalField(decimal_places=1, max_digits=3, validators=[movie_app.validators.validate_rating], verbose_name='Ranking')),
                ('avatar', django_resized.forms.ResizedImageField(crop=['middle', 'center'], default='movie_app/default_movie.png', force_format='PNG', keep_meta=True, quality=75, scale=None, size=[192, 256], upload_to=movie_app.models.image_upload_handler, verbose_name='Awatar')),
                ('characters', models.ManyToManyField(blank=True, related_name='starrings', through='movie_app.Character', to='movie_app.person', verbose_name='Aktorzy')),
                ('comments', models.ManyToManyField(blank=True, related_name='comment_movies', through='movie_app.Comment', to=settings.AUTH_USER_MODEL, verbose_name='Komentarze')),
                ('director', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='directors', to='movie_app.person', verbose_name='Reżyseria')),
                ('genre', models.ManyToManyField(blank=True, related_name='genries', to='movie_app.genre', verbose_name='Gatunek')),
                ('liked_by', models.ManyToManyField(blank=True, related_name='liked_movies', to=settings.AUTH_USER_MODEL, verbose_name='Polubienia')),
                ('screenplay', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='screenplays', to='movie_app.person', verbose_name='Scenariusz')),
            ],
            options={
                'verbose_name': 'Film',
                'verbose_name_plural': 'Filmy',
                'ordering': ['-rating', 'title'],
            },
        ),
        migrations.AddField(
            model_name='comment',
            name='movie',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='movie_comments', to='movie_app.movie', verbose_name='Film'),
        ),
        migrations.AddField(
            model_name='comment',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_comments', to=settings.AUTH_USER_MODEL, verbose_name='Użytkownik'),
        ),
        migrations.AddField(
            model_name='character',
            name='movie',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='movie_characters', to='movie_app.movie', verbose_name='Film'),
        ),
        migrations.AddField(
            model_name='character',
            name='person',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='person_characters', to='movie_app.person', verbose_name='Aktor'),
        ),
        migrations.AlterUniqueTogether(
            name='comment',
            unique_together={('movie', 'user')},
        ),
        migrations.AlterUniqueTogether(
            name='character',
            unique_together={('person', 'movie')},
        ),
    ]
